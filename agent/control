#!/bin/bash -e

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BASENAME=agent_main

app=$BASENAME

conf=src/agent.json
pidfile=$DIR/$app.pid
logfile=$DIR/$app.log

 function check_pid() {
    if [ -f $pidfile ];then
        pid=`cat $pidfile`
        if [ -n $pid ]; then
            running=`ps -p $pid|grep -v "PID TTY" |wc -l`
            return $running
        fi
    fi
    return 0
}

function start() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo -n "$app now is running already, pid="
        cat $pidfile
        return 1
    fi

    if ! [ -f $conf ];then
        echo "Config file $conf doesn't exist, creating one."
    fi
    cd src/
    nohup  ./$BASENAME  >$logfile 2>&1 &
    sleep 1
    running=`ps -p $! | grep -v "PID TTY" | wc -l`
    if [ $running -gt 0 ];then
        echo $! > $pidfile
        echo "$app started..., pid=$!"
    else
        echo "$app failed to start."
        return 1
    fi
}

function killall() {
    pid=`cat $pidfile`
    ps -ef|grep $BASENAME|grep -v grep|awk '{print $2}'|xargs kill -9
    rm -f $pidfile
    echo "$app killed..., pid=$pid"
}

function stop() {
    pid=`cat $pidfile`
    kill $pid
    rm -f $pidfile
    echo "$app stoped..., pid=$pid"
}

function restart() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        stop
        sleep 1
        start
    else
        start
    fi

}

function reload() {
    pid=`cat $pidfile`
    kill -HUP $pid
    sleep 1
    newpid=`ps -ef|grep $BASENAME|grep -v grep|awk '{print $2}'`
    echo "$app reload..., pid=$newpid"
    echo $newpid > $pidfile
}

function status() {
    check_pid
    running=$?
    if [ $running -gt 0 ];then
        echo started
    else
        echo stoped
    fi
}

function tailf() {
   tail -f $logfile
}

function help() {
    echo "$0 build|start|stop|kill|restart|reload|run|tail|docs|pack|beerun|sslkey"
}

if [ "$1" == "" ]; then
    help
elif [ "$1" == "start" ];then
    start
elif [ "$1" == "stop" ];then
    stop
elif [ "$1" == "kill" ];then
    killall
elif [ "$1" == "restart" ];then
    restart
elif [ "$1" == "reload" ];then
    reload
elif [ "$1" == "status" ];then
    status
elif [ "$1" == "run" ];then
    run
else
    help
fi